#!/usr/bin/perl

# Loads cache dump from stattree and generates statistics

use warnings;
use strict;
use Fatal qw/chdir/;
use File::Find;
use Data::Dumper;
use Getopt::Long;
use Storable qw/nstore_fd fd_retrieve/;
use Fcntl qw/:DEFAULT :flock/;

{ no warnings;
$Data::Dumper::Indent = 1;
$Data::Dumper::Terse++;
$Data::Dumper::Sortkeys++;
}

my $dumpdb = 0;
my $verbose = 0;
my %refcache; # memory cache of Storable files. Not really needed but I 
              # copied old code which had it, so ...
my %hash; # complete tree data
my $cachedir = $ENV{CACHE} || "cache";
my $reportdir = $ENV{CACHE} || "cache";
my %i; # internally derived data

unless ( GetOptions ( 
	"verbosedb|dumpdb|d!" => \$dumpdb,
	"verbose|v!" => \$verbose,
)) { die "Error parsing options\n" }

@ARGV == 1 or warn "No arguments, assuming sources/cvs-head\n";


my $path = shift;
$path ||= "sources/cvs-head";
( my $dumppath = $path ) =~ s#.+?/##;
( $i{ver} = $dumppath ) =~ s/\/$//;
my $dumpdir = $dumppath;
$dumppath .= "/.cache.bin";
my $sf = 'guides/stats-template.xml';
my $so = 'guides/stats.xml';
my @sf;

# Load DB
loaddb( "$cachedir/$dumppath" );

open IN, "< $sf" or die "Can't rdopen '$sf' ($!)\n";
@sf = <IN>;
close IN or die "Can't rdclose '$sf' ($!)\n";

for (@sf) {
	s/(\$hash\{.+\})\s$/$1/gee;
}

open OUT, "> $so" or die "Can't wropen '$so' ($!)\n";
print OUT @sf;
close OUT or die "Can't wrclose '$so' ($!)\n";


exit 0;

############################################################################
# Helper functions
#
sub loaddb {
	my $dbpath = shift;

	unless ( exists $refcache{$dbpath} ) {
		open( IN, "< $dbpath") or
			die "Can't open database ($dbpath) ($!).\n";
		flock( IN, LOCK_SH ) or
			die "Can't shared-lock database ($dbpath) ($!).\n";
		$refcache{$dbpath} = fd_retrieve( \*IN );
		close IN or
			die "Can't properly close database ($dbpath) ($!).\n";
	}

	%hash = %{ $refcache{$dbpath} };

	if ( $dumpdb ) {
		print STDERR Dumper \%hash;
		exit 0;
	}
}


