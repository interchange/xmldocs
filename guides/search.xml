<?xml version="1.0" standalone="no"?>

<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook-Interchange XML V4.2//EN"
	"../docbook/docbookxi.dtd">

<article id='search'>

<articleinfo>
	<title>Interchange Guides: Search Tutorial</title>
	<titleabbrev>search</titleabbrev>

	<copyright>
		<year>2005</year>
		<year>2006</year>
		<holder>Interchange Development Group</holder>
	</copyright>

	<authorgroup>
		<author>
			<firstname>Stefan</firstname><surname>Hornburg</surname>
			<email>racke@linuxia.de</email>
		</author>
	</authorgroup>


	<legalnotice>
		<para>
		This documentation is free; you can redistribute it and/or modify
		it under the terms of the &GNU; General Public License as published by
		the Free Software Foundation; either version 2 of the License, or
		(at your option) any later version.
		</para>
		<para>
		It is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		GNU General Public License for more details.
		</para>
	</legalnotice>

	<abstract>
		<para>
		The purpose of this document is to describe the search "subsystem" in
		&IC; and link together all search-related topics.
		</para>
	</abstract>

</articleinfo>


<section>
	<title>Searching using Swish-e</title>
	<!-- TODO : move to HOWTO -->
	<para>
	The Swish search module allows you to search index files generated
	by &SWISH-E;.
	</para>

	<section>
	  <title>Swish-e Integration</title>
	  <para>
	To enable any Swish searching, modify your &gcf; to add:
<programlisting>
Require module Vend::Swish
AddDirective Swish hash
Variable swish Vend::Swish
</programlisting>
	</para>

	<para>
	To configure your catalog to use Swish, modify the appropriate &ccf; and add:
<programlisting>
Swish command /usr/bin/swish-e
Swish index products/swish-e.db
</programlisting>
	</para>
	</section>

	<section>
	  <title>Setup Searches</title>
	  </section>
	
	<para>
	Finally, in search parameters, use <literal>mv_searchtype=swish</literal> or
	the shorthand notation <literal>st=swish</literal>.
	</para>


	<para>
	The fields to be returned from Swish to &IC; are configurable, and default to:

<programlisting>
mv_return_fields=code score title url mod_date filesize
mv_field_names=code score title url mod_date filesize
</programlisting>

	These correspond to:
<programlisting>
  code      swishreccount
  score     swishrank
  url       swishdocpath
  title     swishtitle
  filesize  swishdocsize
  mod_date  swishlastmodified
</programlisting>
	</para>
<para>The date in the <literal>mod_date</literal> field is returned in the
format <literal>%Y-%m-%d %H:%M:%S</literal>.
<para>You can change that with the <literal>date_format</literal> option:
</para>
<programlisting>
Swish date_format "%d %b %Y"
</programlisting>
See &glos-time; glossary entry for supported format strings.
</para>
<section>
<title>Search Examples</title>
<para>
Simple search for the term Swish:
<programlisting>
swish-e -w Swish
</programlisting>
Same search with specifying the index file:
<programlisting>
swish-e -w Swish -f db/xmldocs
</programlisting>
You can include properties in the output:
<programlisting>
swish-e -w Swish -f db/xmldocs -p purpose
</programlisting>
Or search within a property:
<programlisting>
swish-e -w purpose=LWP -f db/xmldocs
</programlisting>
</para>
</section>
<section>
<title>Configuration File Examples</title>
<para>
Indexing web sites is pretty easy. Swish provides a spider script, which is
simply called with the parameters <literal>default</literal> and the starting
URL. Create a configuration file similar to the following:
<programlisting>
IndexFile db/icdevgroup
IndexDir /usr/local/lib/swish-e/spider.pl
SwishProgParameters default http://www.icdevgroup.org/docs/
</programlisting>
Now you can start indexing with <literal>swish-e -S prog -c
icdevgroup.conf</literal>. 
</para>
</section>
</section>


<section id='search_reference'>
	<title>Search Reference</title>

	<itemizedlist>
		<listitem><para>
		<literal>mv_all_chars</literal>
		(ac, <literal>0</literal>/<literal>1</literal>,
		default <literal>1</literal>) &mdash;
		escape non-alphanumeric characters in search specification.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_base_directory</literal>
		(bd, <replaceable>directory_name</replaceable>,
		default Interchange installation directory) &mdash;
		base directory in which to look up text files to search
		(related option <literal>fi</literal>).
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_begin_string</literal>
		(bs, <replaceable>regular_expression</replaceable>,
		default none) &mdash;
		&glos-regexp; that the beginning of the searched field value must match.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_cache_key</literal>
		(ck, <replaceable>search_reference_pointer</replaceable>,
		default none) &mdash;
		not intended for common use. When &tag-more; tag is used,
		this option automatically provides a pointer to the search
		reference.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_coordinate</literal>
		(co, <literal>0</literal>/<literal>1</literal>,
		default <literal>0</literal>) &mdash;
		the so-called "coordinated" search allows for multiple search options
		to be stacked on top of each other.
		</para><para>
		If the number of search fields (<literal>sf</literal> options) equals the
		number of search specs (<literal>se</literal> options), the search will
		return only items that match all field-specification pairs.
		</para><para>
		When coordinated searching is used, case sensitivity, substring matching,
		negation and other options can be specified multiple times and work on a
		field-by field basis, according to the following rules:
		<itemizedlist>
			<listitem><para>
			If only one instance of the option is set, it will affect all fields
			(search specifications).
			</para></listitem>
			<listitem><para>
			If the number of instances of the option is greater than, or equal to,
			the number of search specifications, all will be used independently.
			(Eventual trailing, excess instances will be ignored).
			</para></listitem>
			<listitem><para>
			If more than one instance of the option is set, but fewer than the
			total number of search specifications, the default, documented setting
			will be used for trailing search specifications.
			</para></listitem>
			<listitem><para>
			If a search specification is blank, it will be removed and all
			case-sensitivity, negation, substring and other options will be
			adjusted accordingly. If you need to match on a blank string,
			use quotes (<literal>""</literal>).
			<!-- TODO adjusted how?? unclear -->
			</para></listitem>
		</itemizedlist>
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_case</literal>
		(cs, <literal>0</literal>/<literal>1</literal>,
		default <literal>0</literal>) &mdash;
		case sensitive search.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_verbatim_columns</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_dict_end</literal>
		(de, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_dict_fold</literal>
		(df, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_dict_limit</literal>
		(di, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_dict_look</literal>
		(dl, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_raw_dict_look</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_dict_order</literal>
		(do, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_record_delim</literal>
		(dr, <replaceable>record_delimiter</replaceable>,
		default <literal>\n</literal>) &mdash;
		delimiter for counting records in search index files.
		The default, a newline, works well for most line-based index files.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_exact_match</literal>
		(em, <literal>0</literal>/<literal>1</literal>,
		default <literal>0</literal>) &mdash;
		require that search field matches the search specification exactly
		(as opposed to the default word-based matching, or substring matching
		with <literal>su</literal>).
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_spelling_errors</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_field_file</literal>
		(ff, <replaceable>header_filename</replaceable>,
		default none) &mdash;
		specify filename containing a single line with the list of
		database fields, separated by TABs.
		This is used when you are searching databases without the "field
		header" on the first line, but you would still want to refer to fields
		by their names.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_file</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_field_title</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_first_match</literal>
		(fm, <replaceable>search_result_number</replaceable>,
		default 1) &mdash;
		<!-- TODO one or zero -->
		return search results from the specified result number onwards. When this
		option is set, &IC; will return search results starting from the match
		number specified even if there is only one page of results.
		If set to a value greater than the total number of matches, it will act
		as if no matches were found. 
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_field_names</literal>
		(fn, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_head_skip</literal>
		(hs, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_index_delim</literal>
		(id, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_label</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_like_field</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_list_only</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_line_return</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_like_spec</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_more_alpha</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_more_alpha_chars</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_more_decade</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_more_id</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_matchlimit</literal>
		(ml, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_max_matches</literal>
		(mm, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_more_matches</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_profile</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_min_string</literal>
		(ms, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_negate</literal>
		(ne, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_negate</literal>
		(ng, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_no_hide</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_no_more</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_nextpage</literal>
		(np, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_next_search</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_numeric</literal>
		(nu, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_column_op</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_orsearch</literal>
		(os, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_more_permanent</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_return_all</literal>
		(ra, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_return_delim</literal>
		(dr, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_reference</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_return_fields</literal>
		(rf, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_range_alpha</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_range_look</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_range_min</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_return_file_name</literal>
		(rn, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_return_reference</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_return_spec</literal>
		(rs, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_range_max</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_small_data</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_searchspec</literal>
		(se, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_field</literal>
		(sf, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_group</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_immediate</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_start_match</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_page</literal>
		(sp, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_sql_query</literal>
		(sq, <replaceable>SQL_Query</replaceable>,
		default none) &mdash;
		for text-based searches (<literal>st=text</literal> only), this option
		specifies the SQL query to run over the lines in the file.
		This is not the same as an external &glos-SQL; database search.
		</para><para>
		Furthermore, the <replaceable>SQL_Query</replaceable> undergoes a 
		little modification before it is used. Here's a practical
		example:
<programlisting><![CDATA[
Artist: <input name="artist" />
Title:  <input name="title"  />
<input type="hidden" name="mv_sql_query" value="
  SELECT  code FROM products
  WHERE artist LIKE artist
  AND    title LIKE title
" />
]]></programlisting>
</para>
<para>
If the right-hand side of every part of expression is an alphanumeric,
unquoted word, then it is replaced with the 
appropriate form variable value. (Or if it's a one-click search, &glos-scratch;
variables are used instead). Quoted right-hand side values are taken literally.
<!-- it reads from value or cgi space? -->
</para><para>
If the left-hand side of every part of expression is a quoted word, the behavior
is reversed.  That part is replaced with the appropriate form variable value.
(Or if it's a one-click search, &glos-scratch; variables are used instead).
Unquoted left-hand side values are taken literally.
</para>
<para>
Here's an example that allows users to select
whether they want to search in <database class='field'>title</database>
or <database class='field'>artist</database> fields:
<programlisting><![CDATA[
Search for: <input name="searchstring" /><br />
Search in   <input type="radio" name="column" value="title"  /> title
            <input type="radio" name="column" value="artist" /> artist

<input type=hidden name="mv_sql_query" value="
  SELECT code    FROM products
  WHERE 'column' LIKE searchstring
" />
]]></programlisting>
Just for a reference, here's what the two above examples
would look like when coded "manually":
<programlisting><![CDATA[
[page search="
  co=yes
  sf=artist
  op=rm
  se=[value artist]
  sf=title
  op=rm
  se=[value title]
"]
Search for [value artist], [value title]
</a>


[page search="
  co=yes
  sf=[value column]
  op=rm
  se=[value searchstring]
"]
Search for [value searchstring] in [value column]
</a>
]]></programlisting>
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_search_relate</literal>
		(, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_searchtype</literal>
		(st, [ <literal>glimpse</literal> | <literal>db</literal> |
		<literal>sql</literal> | <literal>text</literal> | 
		<literal>ref</literal> ],
		<!-- is default none or glimpse? Looking at Scan.pm, there's no default -->
		default none) &mdash;
		select search type. <literal>glimpse</literal> uses the Glimpse search
		engine (see &conf-Glimpse;), <literal>db</literal> (or the
		equivalent <literal>sql</literal>) iterate over every row in the
		&glos-SQL; database, <literal>text</literal> searches
		corresponding &glos-database; text source files, and 
		<literal>ref</literal> iterates over the results from some
		previous, already-performed search (related option <literal>lb</literal>).
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_substring_match</literal>
		(su, <literal>0</literal>/<literal>1</literal>,
		default <literal>0</literal>) &mdash;
		match on substrings as well as whole words. This is typically set in
		dictionary-based searches.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_sort_field</literal>
		(tf, <replaceable>field_name_or_index [,field_name2_or_index2...]</replaceable>, 
		default none) &mdash;
		determine sort order of the returned data. It is possible to refer
		to columns by both using their names (if the search is such that column
		names are known) and their indices, starting from <literal>0</literal>.
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_sort_option</literal>
		(to, <literal></literal>/<literal></literal>,
		default <literal></literal>) &mdash;

		</para>
		</listitem>
		<listitem><para>
		<literal>mv_unique</literal>
		(un, <literal>0</literal>/<literal>1</literal>,
		default <literal>0</literal>) &mdash;
		return only unique fields. The option works on whatever the search
		return fields (set with <literal>rf</literal>) are.
		<!-- TODO returns only unique items, or compressed duplicates into one?
		Also, does it looks for uniques in one field, or an entry is consudered
		duplicate only if all fields are the same? -->
		</para>
		</listitem>
		<listitem><para>
		<literal>mv_value</literal>
		(va, <replaceable>value_variable_name</replaceable>=<replaceable>value</replaceable>,
		default none) &mdash;
		assign <replaceable>value</replaceable> to a &glos-value; variable. This
		is exactly what happens with normal variables in search &glos-profile;s
		when you use the <code><replaceable>variable_name</replaceable>=<replaceable>value</replaceable></code> syntax,
		so you should use this option only where variables cannot be set
		directly (i.e. in one-click searches):
<programlisting>
[page
  href=scan
  arg="se=Renaissance
       se=Impressionists
       va=category_name=Renaissance and Impressionist Paintings
       os=yes"
]Renaissance and Impressionist Paintings&lt;a&gt;
</programlisting>
		</para>
		</listitem>
	</itemizedlist>
</section>

</article>
