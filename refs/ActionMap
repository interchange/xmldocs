__NAME__ purpose
modify existing or define custom Interchange actions
__END__


__NAME__ see also
AddDirective,CodeDef,UserTag
__END__


__NAME__ synopsis
<arg choice='plain'>action_name</arg>
<arg choice='plain'>perl_subroutine</arg>
__END__


__NAME__ description
The directive allows creation of new (and modification of existing)
Interchange &glos-ActionMap;s using &PERL; subroutines.
</para><para>
If the action does not return a &glos-true; value, &IC; processing
will stop right there, allowing you to fully handle the request from
your action.
</para><para>
See &glos-ActionMap; glossary entry for more explanation and the list
of built-in &IC; actionmaps.
__END__

__NAME__ notes
For an introduction to Action Maps, see &glos-ActionMap; glossary entry.
</para><para>
The standard <literal>process</literal> ActionMap has a number of 
configuration settings which can be controlled through &conf-FormAction;.
</para><para>
For catalog-level &glos-ActionMap;s, &IC; does not strip the actionmap nam
from the requested HTTP path; for global ActionMaps it does. See
<xref linkend='ActionMap_examples'/>.
__END__


__NAME__ example: Replacing the Order action with a no-op
Put the following in &ccf;:
<programlisting>
ActionMap order sub { 1 }
</programlisting>
<para>
Since we effectively turned Order into a no-operation action, the usual
order link such as
<code><![CDATA[<A HREF="[area order/nextpage]">Order</a>]]></code>
would be equivalent to <code><![CDATA[[page nextpage]Order (does nothing)</a>]]></code>.
__END__

__NAME__ example: Splitting a request into action map, page name and arguments
Here's an example of an actionmap "<literal>test</literal>" that translates
HTTP requests in form of <literal>test/<replaceable>page</replaceable>/<replaceable>arguments</replaceable></literal>
into actual page requests to <literal>page.html</literal> with optional <literal>arguments</literal>.
</para><para>

<programlisting><![CDATA[
ActionMap test <<EOA
sub {
  my $url = shift;

  # Remove actionmap name from the URL 
  $url =~ s:^test/+::i;

  # Arguments are optional
  if ($url =~ s:/+(.*)$::) {
    $CGI->{mv_arg} = $1;
  }

  $CGI->{mv_nextpage} = $url;
  return 1;
}   
EOA
]]></programlisting>
__END__


__NAME__ missing
Kevon's example of /prod/cat/search
__END__

