__NAME__ purpose
define parameters for batch jobs
__END__

__NAME__ synopsis
	<arg choice='plain' rep='repeat'>
		<replaceable>key</replaceable>
		<replaceable>value</replaceable>
	</arg>
__END__

__NAME__ see also
__END__

__NAME__ description
</para><para>
The directive configures Interchange batch &glos-jobs; facility.
It accepts a list of key/value pairs.
</para><para>
It can be specified at both the global and &glos-catalog; level.
</para><para>
The available keys for the <emphasis role='bold'>global directive</emphasis>
are:
<informaltable>
<tgroup cols="3">
<thead>
<row>
<entry>Key</entry>
<entry>Default</entry>
<entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry><literal>MaxLifetime</literal></entry>
<entry><literal>600</literal></entry>
<entry>The maximum time (in seconds) that a job will be allowed to run.</entry>
</row>
<row>
<entry><literal>MaxServers</literal></entry>
<entry><literal>1</literal></entry>
<entry>The maximum number of servers processing jobs. Excess jobs will be queued.
</entry>
</row>
<row>
<entry><literal>UseGlobal</literal></entry>
<entry><literal>false</literal></entry>
<entry>Search always for global job definitions.
</entry>
</row>
</tbody>
</tgroup>
</informaltable>

</para>
<para>
The available keys for the <emphasis role='bold'>catalog directive</emphasis> are:
<itemizedlist>
	<listitem><para><literal>add_session</literal> (<replaceable>true/false</replaceable>, default
	false) -
	include the current &glos-session; in the jobs output. The output is saved
	to log files or e-mailed to specified user
	</para></listitem>
	<listitem><para><literal>autoend</literal> (&conf-Sub; or &conf-GlobalSub;, default none) -
	a subroutine to run at the end of each jobs file
	</para></listitem>
	<listitem><para><literal>autoload</literal> (&conf-Sub; or &conf-GlobalSub;, default none) -
	a subroutine to run at the beginning of each jobs file
	</para></listitem>
	<listitem><para><literal>base_directory</literal> (<replaceable>DIRECTORY_NAME</replaceable>,
	default <literal><replaceable>CATROOT</replaceable>/etc/jobs/</literal>) -
	directory to search for cron jobs.
	The <literal><replaceable>DIRECTORY_NAME</replaceable></literal>
	placeholder seen in the examples below is treated relative to this
	base directory.
	</para></listitem>
	<listitem><para><literal>email</literal> (<replaceable>email_address</replaceable>, default
	none) -
	e-mail for session reports, if any result from running jobs
	</para></listitem>
	<listitem><para><literal>extra_headers</literal> (<replaceable>e-mail_headers</replaceable>,
	default none) -
	any additional headers for an e-mail message. The input should be already
	formatted in the e-mail headers style
	</para></listitem>
	<listitem><para><literal>filter</literal> (<replaceable>filter_name</replaceable>, default
	&filter-strip;) -
	run the job output through specified &glos-filter; before saving it to 
	a log file or e-mailing
	</para></listitem>
	<listitem><para><literal>from</literal> (<replaceable>email_sender</replaceable>, default
	none) -
	value for the "From: " field in the outgoing emails
	</para></listitem>
	<listitem><para><literal>ignore_errors</literal> (<replaceable>true/false</replaceable>, default
	false) - excludes fatal errors from job output
	</para></listitem>
	<listitem><para><literal>initialize</literal> (&conf-Sub; or &conf-GlobalSub;, default none) -
	a macro to execute once before each job
	</para></listitem>
	<listitem><para><literal>log</literal> (<replaceable>log_filename</replaceable>, default none) -
	logfile for session reports, if any result from running jobs
	</para></listitem>
	<listitem><para><literal>reply_to</literal> (<replaceable>email_address</replaceable>, 
	default: system default) -
	value for the "Reply-To: " field in the outgoing emails
	</para></listitem>
	<listitem><para><literal>subject</literal> (<replaceable>email_subject</replaceable>, default <literal>Interchange results for job: <replaceable>JOB_NAME</replaceable></literal>) -
	value for the "Subject: " field in the outgoing emails
	</para></listitem>
	<listitem><para><literal>trackdb</literal> (<replaceable>table_name</replaceable>, default
	none) -
	write job run information to specified &glos-table;. The 
	table must have the necessary fields
	<database class='field'>code</database>,
	<database class='field'>name</database>,
	<database class='field'>begin_run</database> and
	<database class='field'>pid</database>.
	</para></listitem>
	<listitem><para><literal>use_global</literal> (<replaceable>true/false</replaceable>,
	default false) -
	search for global jobs definitions in directory
	<filename class='directory'>&conf-ConfDir;/jobs/</filename>
	and add them to the queue for execution
	</para></listitem>
</itemizedlist>
</para><para>
__END__

__NAME__ notes
Files in the jobs directory that end in &conf-HTMLsuffix; will be silently ignored.
</para><para>
The invocation of jobs from the command line will only queue them for execution
and will return the shell prompt before the jobs have actually started
executing.
</para><para>
A common temporary &glos-session; (<mv>mv_tmp_session</mv> == &glos-true;)
will be created for use by all of the files
in the job queue. The session will be closed when the jobs complete.
The remote IP address will be set to <literal>none</literal> and the
user agent string will be set to <literal>commandline</literal>.
__END__

__NAME__ example: Define catalog-level Jobs directive
Specify directory that will hold the job files, and set up a log file to
for job runs. Also specify an email address to which any output jobs
output will be sent:
<programlisting>
Jobs &lt;&lt;EOJ
  base_directory  jobs
  log             logs/jobs.log
  email           root@&def-hostname;
EOJ
</programlisting>
__END__

__NAME__ example: Run jobs manually
Invoke from the command line:
<programlisting>
su -c '/PATH/TO/interchange --quiet --runjobs=CATALOG_NAME=DIRECTORY_NAME' USERNAME
</programlisting>
__END__

__NAME__ example: Run jobs automatically from Unix crontab
<programlisting>
12 2 * * * su -c '/PATH/TO/interchange --quiet --runjobs=CATALOG_NAME=DIRECTORY_NAME' USERNAME
</programlisting>
__END__

__NAME__ missing
turn itemizedlist into table
__END__
