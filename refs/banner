__NAME__ purpose
display banner ads or messages, based on category and optional weighting
__END__

__NAME__ synopsis
<row>
	<entry>
		<arg choice='plain'>category</arg>
	</entry>
	<entry>Yes</entry><entry></entry>
	<entry><literal>default</literal></entry>
	<entry>
	For a &glos-weighted; banner display, this field specifies
	category name; only database entries where the
	<database class='field'>category</database>
	field matches this value are taken as possible candidates for display.
	In an unweighted display, this field specifies
	banner code; of course, only one database entry with the matching value in
	the <database class='field'>code</database> field should exist.
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>table</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry><literal>banner</literal></entry>
	<entry>
	The banner table name. The default is reasonable and
	rarely needs to be changed. <mv>my_banner_table</mv> can be set to 
	override this value.</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>r_field</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry><literal>rotate</literal></entry>
	<entry>
	Row in a banner table may include multiple banners in the <database
	class='field'>banner</database> column (separated by specified delimiters).
	The column specified by <database class='field'>r_field</database> is 
	consulted (expecting a boolean value) to determine whether to
	sequentially rotate banners. This is only used with non-weighted banner
	display scheme.
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>b_field</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry><literal>banner</literal></entry>
	<entry>
	Banner descriptor field. In other words, name of the column that will
	contain actual banner text to display. If a proper delimiter is used, and
	the <arg choice='plain'>r_field</arg> column is true, this field may contain
	multiple banner texts.
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>c_field</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry><literal>category</literal></entry>
	<entry>
	Specify the column containing banner category.
	Only banners from the selected category will be taken as possible
	candidates for display.
	This is only used with weighted ads.
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>w_field</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry><literal>weight</literal></entry>
	<entry>
	Specify the table column containing banner weights.
	This is only used with weighted ads.
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>separator</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry><literal>:</literal></entry>
	<entry>
	Separator within the table key (the <database class='field'>code</database>
	column), used for multilevel categorized ads.
	This is only used with unweighted ads.
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>delimiter</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry><literal>{or}</literal></entry>
	<entry>
	Delimiter that sets different banner texts in the
	<database class='field'>banner</database> field apart.
	This is only used with unweighted ads.
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>weighted</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry>0</entry>
	<entry>
	Use &glos-weighted;
	banner system? In a weighted system, the database is expected
	to contain multiple entries with the same
	<database class='field'>category</database>, and then the banners are
	selected in regard to their relative weight (more weight = more 
	visibility). The sum of weights can be arbitrary and does not need to 
	equal 1 (obviously - because that would require a manual intervention
	on every banner addition/remove operation).
	</entry>
</row>
<row>
	<entry>
		<arg choice='plain'>once</arg>
	</entry>
	<entry></entry><entry></entry>
	<entry>0</entry>
	<entry>
	Don't rebuild the banners until the appropriate
	<filename>tmp/Banners/*/total_weight</filename> files are manually removed?
	This is only used with weighted ads.
	</entry>
</row>
&TAG_NON_CONTAINER;
__END__


__NAME__ see also
implementbanners
__END__


__NAME__ description
&IC; has a built-in banner display system designed to show 
&glos-ad; or other
messages, according to optional categories and
&glos-weighted; values.
All this functionality is accessible using the <tag>banner</tag> tag.
</para><para>
The &glos-weighted; system,
if used, will pre-built banners in the directory
<filename class='directory'>Banners/*/</filename> under the catalog temporary
directory (this will happen when the banners are first requested after
a catalog reconfiguration or Interchange daemon start).
It will build one copy of the banner for every value of <database
class='field'>weight</database>.
If one banner is weighted 7, one 2 and one 1 (in abstract points), then a
total of 10 pre-built banners will be made. The first will be displayed
70 percent of the time, the second 20 percent and the third 10 percent,
in random fashion. If all banners need to be equal (that is, displayed
randomly with the same probability), give each a weight of 1.
</para><para>
Each category has its own separate weighting if categorized display is
requested; otherwise all weights enter the same logical "pool".
</para><para>
Note that the term <firstterm>rotation</firstterm> refers to sequentially
selecting and displaying banners from the same
<database class='field'>banner</database> field (keeping a separate counter
for each client). This, of course, makes sense in a context where
<database class='field'>banner</database> contains multiple banner
entries, separated by chosen delimiters.
__END__


__NAME__ example: Banner Ads
For the relevant supplemental description and all ready-to-use examples,
see the <olink targetdoc='howtos' targetptr='implementbanners'>
Implement Banner Ads</olink> HOW-TO.
__END__

