__NAME__ purpose
adjust default behavior of Interchange user database functions
__END__


__NAME__ see also
Database,
__END__


__NAME__ synopsis
	<arg choice='plain'><replaceable>profile</replaceable></arg>
	<arg choice='plain'><replaceable>parameter</replaceable></arg>
	<arg choice='plain'><replaceable>value</replaceable></arg>
__END__


__NAME__ description
The directive sets parameters to adjust the behavior of Interchange's
built-in user database functions.
</para><para>
<informaltable>
<tgroup cols="3">
<thead>
<row><entry>Parameter</entry><entry>Explanation</entry><entry>Default</entry></row>
</thead>
<tbody>
<!-- IF there's file_acl and db_acl, what's just acl? -->
<row><entry>acl</entry><entry>Field name for the simple page access control</entry><entry><literal>acl</literal></entry></row>
<row><entry>addr_field</entry><entry>Field name for the address book
</entry><entry><literal>address_book</literal></entry></row>
<row><entry>assign_username</entry><entry>Automatically assign username if not provided?
</entry><entry>0</entry></row>
<row><entry>bill_field</entry><entry>Field name for billing accounts
</entry><entry><literal>accounts</literal></entry></row>
<row><entry>captcha</entry><entry>
</entry><entry></entry></row>
<row><entry>cart_field</entry><entry>Field name for carts storage
</entry><entry><literal>carts</literal></entry></row>
<row><entry>clear_cookie</entry><entry>List of cookies to clear on explicit logout, separated by space, a comma or null-character
</entry><entry>None</entry></row>
<row><entry>clear_session</entry><entry>Clear user session completely upon logout?
</entry><entry>0</entry></row>
<row><entry>counter</entry><entry>Counter filename for <literal>assign_username</literal> function
</entry><entry><filename>etc/username.counter</filename></entry></row>
<row><entry>crypt</entry><entry>Encrypt passwords?
</entry><entry>1</entry></row>
<row><entry>database</entry><entry>Name of the user &glos-database;
</entry><entry><literal>userdb</literal></entry></row>
<row><entry>db_acl</entry><entry>Field name for database access control
</entry><entry><literal>db_acl</literal></entry></row>
<row><entry>expire_field</entry><entry>Field name for account expiration data
</entry><entry><literal>expiration</literal></entry></row>
<row><entry>file_acl</entry><entry>Field name for file access control
</entry><entry><literal>file_acl</literal></entry></row>
<row><entry>force_lower</entry><entry>Force possibly upper-case database fields to lower case session variable names?
</entry><entry>0</entry></row>
<row><entry>ignore_case</entry><entry>Ignore case in usernames and passwords?
</entry><entry>0</entry></row>
<row><entry>indirect_login</entry><entry>Field name used as login field if different from the primary table key
</entry><entry>None</entry></row>
<row><entry>logfile</entry><entry>Filename to which successful and unsuccessful authentication messages should be sent
</entry><entry><filename>error.log</filename></entry></row>
<row><entry>md5</entry><entry>Use MD5 for encryption algorithm instead of the standard (and aging) Unix crypt?
</entry><entry>0</entry></row>
<row><entry>no_get</entry><entry>Do not load values from the database into the user's &glos-value;s space at login time?
</entry><entry>0</entry></row>
<!-- WTF ?? -->
<row><entry>no_login</entry><entry>Successfully perform login even if already logged in?
</entry><entry>0</entry></row>
<row><entry>outboard_key_col</entry><entry>Field name providing key for outboard tables
</entry><entry>None</entry></row>
<row><entry>outboard</entry><entry>List of fields that live in another table
</entry><entry>None</entry></row>
<row><entry>pass_field</entry><entry>Field name for password
</entry><entry><literal>password</literal></entry></row>
<row><entry>passminlen</entry><entry>Minimum password length
</entry><entry>2</entry></row>
<!-- Vend::Dispatch::run_macro? Check it out-->
<row><entry>postlogin_action</entry><entry>Macro to run after the user is logged in
</entry><entry>None</entry></row>
<row><entry>pref_field</entry><entry>Field name for preferences
</entry><entry><literal>preferences</literal></entry></row>
<row><entry>scratch</entry><entry>List of UserDB fields to load into &glos-scratch; space, instead of the default &glos-value;s space
</entry><entry>None</entry></row>
<row><entry>sql_counter</entry><entry>SQL counter spec (<literal>sequence</literal> or <literal>AUTO_INCREMENT</literal>) for <literal>assign_username</literal> function
</entry><entry></entry></row>
<row><entry>super_field</entry><entry>Field name that, when set to <literal>1</literal>, indicates account's superuser status
</entry><entry><literal>super</literal></entry></row>
<row><entry>time_field</entry><entry>Field name for storing last login time
</entry><entry><literal>time</literal></entry></row>
<row><entry>unix_time</entry><entry>In log files, use seconds since Unix &glos-epoch; instead of human-readable time?
</entry><entry>0</entry></row>
<row><entry>userminlen</entry><entry>Minimum username length
</entry><entry>2</entry></row>
<row><entry>username_email</entry><entry>
</entry><entry></entry></row>
<row><entry>username_mask</entry><entry>Regular expression that usernames <emphasis role='bold'>must not</emphasis> match in order to be allowed
</entry><entry>None</entry></row>
<row><entry>validchars</entry><entry>Character classes that usernames <emphasis role='bold'>must</emphasis> match in order to be allowed</entry>
<entry><literal>-A-Za-z0-9_@.</literal></entry></row>
</tbody>
</tgroup>
</informaltable>
__END__


__NAME__ notes
See &glos-UserDB; glossary entry for more information.
__END__

__NAME__ example: Minimum lengths
Set minimum lengths in characters for username and password.
<programlisting>
UserDB    default    userminlen    8
UserDB    default    passminlen    6
</programlisting>
__END__

!block table
Parameter|Default|Explanation
acl|acl|Set field for simple access control storage
addr_field|address_book|Set field name for address book
assign_username|0|Tell interchange to automatically assign username
bill_field|accounts|Set field name for accounts
cart_field|carts|Set field name for cart storage
clear_cookie||Comma-separated list of cookies to clear on explicit logout
clear_session||Clear user session completely on logout
counter||Counter file for assign_username function
crypt|1|Encrypt (1) or not encrypt (0) passwords
database|userdb|Sets user database table
db_acl|db_acl|Set field for database access control storage
expire_field|expiration|Set field for expiration date
file_acl|file_acl|Set field for file access control storage
force_lower|0|Force possibly upper-case database fields to lower case session variable names
ignore_case|0|Ignore case in usernames/passwords
indirect_login||Log in field if different than real username
logfile|error.log|File to log authentications/errors
md5|0|Use MD5 for encryption algorithm instead of crypt
no_get|0|Don't get values from database on login
no_login|0|Log people in to accounts even if they are already logged in
outboard_key_col||Set field providing key for outboard tables
outboard||Set fields that live in another table
pass_field|password|Set field name for password
passminlen|2|Minimum length for password
pref_field|preferences|Set field name for preferences
scratch||Fields to set in user Scratch space (instead of Values)
sql_counter||SQL counter spec (sequence or AUTO_INCREMENT) for assign_username function
super_field|super|Field to determine superuser status if admin profile
time_field|time|Set field for storing last login time
unix_time|0|Set if unix (seconds since 1970) time to go in log files
userminlen|2|Minimum length for username
username_mask||Regular expression usernames must not match
!endblock

These are set in a C<catalog.cfg> file with something like:

	UserDB  default  crypt   0
	UserDB  admin    crypt   1
	UserDB  admin    md5     1

where C<default> or C<admin> is the name of the profile to set. These can
be overridden if passed in the tag:

>   [userdb userminlen=6 new-account=1]
