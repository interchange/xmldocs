__NAME__ purpose
register existing database table for use with Interchange
__END__

__NAME__ synopsis
	<arg choice='plain'><replaceable>table_name</replaceable></arg>
	<arg choice='plain'><replaceable>table_source_file</replaceable></arg>
	<arg choice='plain'><replaceable>table_type</replaceable></arg>
__END__

__NAME__ see also
TableRestrict,data,DatabaseDefault
__END__

__NAME__ description
</para><para>
The directive registers a database table for use with &IC;. 
<literal>name</literal> specifies an arbitrary name &mdash; name
that will be used to refer to the table within &IC;. Names can be composed
of alphanumeric characters including underscore, and we recommend they're in
all lower- or upper-case.
</para><para>
<literal>source_file</literal> specifies the initial database
source file, and <literal>type</literal> specifies its format.
</para><para>
For more about &IC; and databases, and supported formats, see &glos-database;
glossary entry.
__END__

__NAME__ notes
In &IC;, words <literal>table</literal> and <literal>database</literal>
are used to refer to the same thing &mdash; database table.
</para><para>
Defining databases on an &IC; (global) level
<emphasis role='bold'>does not work</emphasis>! If you want to share
databases among catalogs, define them in each &ccf; separately (possibly
by including the generic file with &conf-Database; definitions).
__END__

__NAME__ example: Default, most basic products database
<programlisting>
Database products products.txt TAB
</programlisting>
__END__

__NAME__ example: Simple definition of a CSV-style database source format
<programlisting>
Database reviews reviews.txt CVS
</programlisting>
__END__

__NAME__ missing
Examples for each DB type supported (Oracle, Pg, Mys,... )
List of all keys that can occur in a specification
__END__
