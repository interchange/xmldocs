
PRIMARY:
- Stinky manpage stylesheets are a disaster. This time it's that
  <cmdsynopsis> is verbatim and <screen> still renders comments without
  newlines! I mean, what the... (And &copy; is translated to crap instead
  of plain "C").
- See why the autogenerated navigation links are so retarded (just home/up,
  no next/prev)
- not to forget, fix cases where context goes to negative values

- In iccattut:
  - under important file and directories, mention default username,
    And rename the section appropriately.
  - make a "translation map" of /etc/interchange/* to RPM-equivs.
  - item for package names, like interchange-cat-foundation, wenglish, etc..
    ( This is ok, docbook 4.4 will have <package> element )
  - at the top where describing IC, mention it's built on Perl and ITL
  - replace <tag> with <code> where putting tag alone in the source would work.
  - explain syntax accepted in profile files

DOCUMENTATION SYSTEM:
- copy the definition for <example> to a
  new name so we'll be able to differentiate between source chunks and 
  examples.
- Add support to document tags which are NOT found in separate files
  (like [restrict] or [subject]).
- Read all possible options for tag files from vend/config.pm
  (%tag.* structures) and warn if invalid option is found in any tag file.

iccattut:
- give examples for the tasks in 'do yourself' section (in progress)
- give good practices about filtering, security
- see problems from old docs/TODO notes on iccattut

GLOSSARY:
tag, interpolation, reparse, symbol types

 Mid-term:
- Think about adding "online example" (role=html in combination with 
  a flag that says if html is to be static or for hosting on IC-enabled site) 
- for "online" docs, also provide a form where users can add comments or
  ask for clarification. (this could be done with either pure IC (forum?), or 
  XML forms capability, or wiki?)..
- in html, make source contexts "rollable" by either using some css
  properties or javascript. this is not really needed when you only have
  say, 15 lines of context, but it'll come great when you have a copy
  of a 300-lines usertag. Example for this could be taken directly out of
  mwforum demo on mwforum.org
- In refs-autogen at a few places we keep both the hash/array representation
  of values, and their string representation. (We always generate string
  when modifying array/hash). It should be made so that we only modify
  array/hash during the whole program, then in the last step before
  generating the template they get stringified.
- Visually mark obsolete items (those not present in cvs-head)
- leaf nodes

 Long-term:
- filenames in Source contexts should also be clickable. this is longterm
  because it'll involve perltidy and other stuff I have in mind ...

- rebuild the make system:
  - isolate build steps and make it possible to build specific "pages"
    without the rest
  - better dependencies 

DOCUMENTATION ITSELF:
- Resolve items from tmp/missing file. (You need to run 'make' in your tree
  first, to get that file generated). I did what I could, now the list only
  contains items which don't even exist in the old docs, so I can't copy/paste;
  someone who is able to write the description/examples from scratch should
  do that.


<epigraph>
<attribution>William Safire</attribution>
<para>
Knowing how things work is the basis for appreciation, and is
thus a source of civilized delight.
</para>
</epigraph>


"In times of universal deceit, telling the truth becomes
 a revolutionary act." -- George Orwell.

 
For a successful technology, reality must take precedence over public
relations, for Nature cannot be fooled. -- Dick Feynman

######################################################################

add a note that copypasting iccattut will first not teach you anything,
and second, you'll end up with a problem that you won't know where to
look for, because you'll be unfamiliar with the copypasted thing...

Tags:
  parameters
  positional list
  invalidates cache
  aliases
  tag call / perl call / mvasp
  container
  has subtags
  nests

---- 
New docs:
 - promotional
 - new developer howto
